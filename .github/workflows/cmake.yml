name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build the application
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Clean previous docker composes
        run: >
          docker-compose --project-directory ./src down

      - name: Export USER_ID
        run: >
          export USER_ID=$(id -u ${USER})

      - name: Export GROUP_ID
        run: >
          export GROUP_ID=$(id -g ${USER})

      - name: Check exportations
        run: |
          echo "USER: ${USER}" || true
          echo $(id -u ${USER}) || true
          echo "USER_ID: ${USER_ID}" || true
          printenv || true
          exit 123

      - name: Start the docker compose
        run: >
          docker-compose --project-directory ./src up --detach --build

      - name: Build the application
        run: >
          docker exec \
            --user ${USER_ID} \
            -it bose-connect-app-linux \
            /root/bose-connect-app-linux/script/build-prod.bash

      - name: Get binary's name
        run: |
          cd ${{github.workspace}}/src/build
          PROJECT_NAME=$(grep PROJECT_NAME CMakeCache.txt | cut -d "=" -f2)
          echo "BINARY_NAME=${PROJECT_NAME}" >> $GITHUB_ENV
          # tar -zcvf "${PROJECT_NAME}.tar.gz" "${PROJECT_NAME}"
          zip "${PROJECT_NAME}.zip" "${PROJECT_NAME}"

      - name: Archive binary's built
        uses: actions/upload-artifact@v2
        with:
          name: binary-compressed-application
          path: ${{github.workspace}}/src/build/${{ env.BINARY_NAME }}.*
