name: CMake

on:
  push:
    branches: [ main, quality-assurance-code ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build the application
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build the Docker image
        run: >
          docker build \
            . \
            --file Dockerfile \
            --tag bose-connect-app-linux:latest

      - name: Run the Docker image into container
        run: >
          docker run \
            --rm \
            --detach \
            --interactive \
            --tty \
            --name bose-connect-app-linux \
            bose-connect-app-linux:latest \
            /bin/bash

      - name: Copy the build folder from the Docker container
        run: >
          docker cp \
            bose-connect-app-linux:/root/bose-connect-app-linux/build \
            $(pwd)

      - name: Stop Docker container
        run: >
          docker cp \
            bose-connect-app-linux:/root/bose-connect-app-linux/build \
            $(pwd)

      - name: Get binary's name
        run: |
          cd ${{github.workspace}}/build
          PROJECT_NAME=$(grep PROJECT_NAME CMakeCache.txt | cut -d "=" -f2)
          echo "BINARY_NAME=${PROJECT_NAME}" >> $GITHUB_ENV
          tar -zcvf "${PROJECT_NAME}.tar.gz" "${PROJECT_NAME}"
          zip "${PROJECT_NAME}.zip" "${PROJECT_NAME}"

      - name: Archive binary's built
        uses: actions/upload-artifact@v2
        with:
          name: binary-compressed-application
          path: ${{github.workspace}}/build/${{ env.BINARY_NAME }}.*
